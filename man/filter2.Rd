% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter2.R
\name{filter2}
\alias{filter2}
\alias{subset2}
\alias{prepare_consort}
\title{filter2}
\usage{
filter2(.data, ..., .preserve = FALSE, subject_column_name = NULL)

subset2(x, ...)

prepare_consort(..., split = NULL)
}
\arguments{
\item{.data}{A data frame,}

\item{...}{data.frame mit filter2}

\item{.preserve}{Relevant when the .data input is grouped.}

\item{subject_column_name}{Unique subject id}

\item{x}{object to be subsetted.}

\item{split}{table-Objekt}
}
\value{
data.frame mit attr(x, "filter")

data.frame

data.frame
}
\description{
filter2: stolen from dplyr::filter  and https://github.com/openpharma/visR

subset2: subset + label_data_frame

prepare_consort erstellt der Tabelle auc mit filter2 excludet data
}
\details{
Keep rows that match a condition,  Subsetting Vectors, Matrices and Data Frames
}
\examples{

 subset2(airquality, Temp > 80, select = c(Ozone, Temp))
 dplyr::filter(airquality, Temp > 80)
 
 dat <- filter2(airquality, Temp > 80 )
 
 # simple_consort_plot(dat)
 attr(dat, "filter")

\dontrun{
require(stp25stat2)
require(stp25tools)


data(DFdummy, package = "stp25data")
if(exists("DFdummy")){
  DF1 <- DFdummy |> filter2(study.agreement)
  attr(DF1, "filter")
  
  DF2 <- DF1 |> filter2(
    st.p.sars.cov2 == "nein",
    !is.na(spike.igg.3.impfung),
    !is.na(MPN)
    
  )
  
  DF3 <- DF2 |> filter2(
    study.agreement,
    sero.negativ.after.dose.2,
    !is.na(spike.igg.3.impfung),
    !is.na(spike.igg.4.impfung),
    spike.igg.3.impfung == "<7.1 BAU/ml"
  )
  
  
  
  dat <- prepare_consort(DF1, DF2, DF3)
  
  
  require(consort)
  
  out <- consort_plot(
    data = dat,
    orders = c(
      Trial.Nr   = "Population",
      Condition.1           = "Excluded",
      Trial.Nr     = "Allocated \nDeskriptive Analyse",
      Condition.2    =    "Fehlende Daten",
      Trial.Nr = "Regressionsanalyse",
      Condition.3    = "Not evaluable for the final analysis",
      Trial.Nr = "Final Analysis"
    ),
    side_box = c("Condition.1", "Condition.2", "Condition.3"),
    cex = 0.9
  )
  
  
  
  plot(out)
}


# DF1 <- DFdummy |> filter2(study.agreement)
# attr(DF1, "filter")
# DF2 <- DF1 |> filter2(
#   st.p.sars.cov2 == "nein",
#   !is.na(spike.igg.3.impfung),
#   !is.na(MPN)
# 
# )
# 
# DF3 <- DF2 |> filter2(
#   study.agreement,
#   sero.negativ.after.dose.2,
#   !is.na(spike.igg.3.impfung),
#   !is.na(spike.igg.4.impfung),
#   spike.igg.3.impfung == "<7.1 BAU/ml"
# )
# dat <- prepare_consort(DF1, DF2, DF3)
# 
# require(consort_plot)
# 
# out <- consort_plot(
#   data = dat,
#   orders = c(
#     Trial.Nr   = "Population",
#     Condition.1           = "Excluded",
#     Trial.Nr     = "Allocated \nDeskriptive Analyse",
#     Condition.2    =    "Fehlende Daten",
#     Trial.Nr = "Regressionsanalyse",
#     Condition.3    = "Not evaluable for the final analysis",
#     Trial.Nr = "Final Analysis"
#   ),
#   side_box = c("Condition.1", "Condition.2", "Condition.3"),
#   cex = 0.9
# )
# 
# plot(out)
# 
# 
# dat2 <- prepare_consort(DF1,
#                         DF2,
#                         split = table(DF2$geschlecht)
# )
# 
# consort_plot(
#   data = dat2,
#   orders = c(
#     Trial.Nr   = "Population",
#     Condition.1           = "Excluded",
#     Trial.Nr     = "Allocated \nDeskriptive Analyse",
#     Condition.2    =    "Fehlende Daten",
#     # Trial.Nr = "Regressionsanalyse",
#     Split = "Stratifizierung",
#     Trial.Nr = "Final Analysis"
#   ),
#   side_box = c("Condition.1", "Condition.2"),
# 
#   allocation = "Split",
#   labels = c("1" = "Screening", "2" = "Randomization", "4" = "Final"),
#   cex = 0.9
# )

}


}
